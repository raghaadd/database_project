/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tourisim;

import java.awt.Color;
import java.awt.Component;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import oracle.jdbc.pool.OracleDataSource;

/**
 *
 * @author Msys
 */
public class SearchEmployee extends javax.swing.JFrame {
private ButtonGroup radio1=new ButtonGroup();
 EntityManager emp=Persistence.createEntityManagerFactory("TourisimPU").createEntityManager();
    /**
     * Creates new form SearchEmployee
     */
    public SearchEmployee() {
        initComponents();
        super.pack();
        super.setLocationRelativeTo(null);
        super.setSize(730, 520);
       radio1.add(jRadioButtonstaff);
       radio1.add(jRadioButtonGuide);
       jTable1.getTableHeader().setDefaultRenderer(new SearchEmployee.HeaderColor());
       Color c=new Color(32,170,183);
        jTable1.setRowHeight(40);
        jTable1.setShowGrid(true);
        jTable1.setGridColor(c);
        jTable1.setBackground(Color.WHITE);
        jTable1.setForeground(c);
        jComboBox1.setForeground(Color.white);
      jComboBox1.setBackground(c);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldFN = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldLN = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jRadioButtonstaff = new javax.swing.JRadioButton();
        jRadioButtonGuide = new javax.swing.JRadioButton();
        jButtonback = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtondetails = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(740, 391));
        setResizable(false);
        setSize(new java.awt.Dimension(710, 391));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel9.setFont(new java.awt.Font("Traditional Arabic", 1, 56)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(32, 170, 183));
        jLabel9.setText("Search Employee");

        jLabel5.setFont(new java.awt.Font("Traditional Arabic", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(32, 170, 183));
        jLabel5.setText("First Name:");

        jTextFieldFN.setBackground(new java.awt.Color(32, 170, 183));
        jTextFieldFN.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Traditional Arabic", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(32, 170, 183));
        jLabel2.setText("Last Name:");

        jTextFieldLN.setBackground(new java.awt.Color(32, 170, 183));
        jTextFieldLN.setForeground(new java.awt.Color(255, 255, 255));

        jLabel12.setFont(new java.awt.Font("Traditional Arabic", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(32, 170, 183));
        jLabel12.setText("Guide Languages:");
        jLabel12.setToolTipText("");

        jLabel13.setFont(new java.awt.Font("Traditional Arabic", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(32, 170, 183));
        jLabel13.setText("Employee Type:");

        jRadioButtonstaff.setBackground(new java.awt.Color(255, 255, 255));
        jRadioButtonstaff.setFont(new java.awt.Font("Traditional Arabic", 1, 14)); // NOI18N
        jRadioButtonstaff.setForeground(new java.awt.Color(32, 170, 183));
        jRadioButtonstaff.setText("Staff");
        jRadioButtonstaff.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jRadioButtonGuide.setBackground(new java.awt.Color(255, 255, 255));
        jRadioButtonGuide.setFont(new java.awt.Font("Traditional Arabic", 1, 14)); // NOI18N
        jRadioButtonGuide.setForeground(new java.awt.Color(32, 170, 183));
        jRadioButtonGuide.setText("Guide");
        jRadioButtonGuide.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jButtonback.setBackground(new java.awt.Color(32, 170, 183));
        jButtonback.setFont(new java.awt.Font("Traditional Arabic", 1, 24)); // NOI18N
        jButtonback.setForeground(new java.awt.Color(255, 255, 255));
        jButtonback.setText("Back");
        jButtonback.setBorder(null);
        jButtonback.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonback.setPreferredSize(new java.awt.Dimension(146, 44));
        jButtonback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonbackActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(32, 170, 183));
        jPanel2.setPreferredSize(new java.awt.Dimension(212, 84));

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTable1.setFont(new java.awt.Font("Traditional Arabic", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "EID", "FName", "LName", "Email", "Hire Date", "Gender"
            }
        ));
        jTable1.setMinimumSize(new java.awt.Dimension(135, 200));
        jTable1.setPreferredSize(new java.awt.Dimension(500, 500));
        jTable1.setRowHeight(40);
        jTable1.setSelectionBackground(new java.awt.Color(32, 170, 183));
        jTable1.setShowGrid(true);
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButtondetails.setBackground(new java.awt.Color(32, 170, 183));
        jButtondetails.setFont(new java.awt.Font("Traditional Arabic", 1, 24)); // NOI18N
        jButtondetails.setForeground(new java.awt.Color(255, 255, 255));
        jButtondetails.setText("Get Details");
        jButtondetails.setBorder(null);
        jButtondetails.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtondetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtondetailsActionPerformed(evt);
            }
        });

        jComboBox1.setFont(new java.awt.Font("Traditional Arabic", 1, 14)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(32, 170, 183));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Arabic", "Chinese", "English", "French", "Spanish", "Turkish" }));
        jComboBox1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(167, Short.MAX_VALUE)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(120, 120, 120))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtondetails, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonback, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(41, 41, 41))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldFN)
                                    .addComponent(jTextFieldLN)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButtonstaff)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButtonGuide)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldFN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldLN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jRadioButtonstaff)
                            .addComponent(jRadioButtonGuide))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtondetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonback, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonbackActionPerformed
        super.setVisible(false);
    }//GEN-LAST:event_jButtonbackActionPerformed

    private void jButtondetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtondetailsActionPerformed
        // TODO add your handling code here:
         try{
        Query q1=emp.createNamedQuery("Employeee.findAllorder");
        Query q2=emp.createNamedQuery("Person.findAll");
        List<Employeee> emplist=q1.getResultList();
        List<Person> perlist=q2.getResultList();
         DefaultTableModel dtm=new DefaultTableModel(0,0);
         if(!jTextFieldFN.getText().isEmpty()&&!jTextFieldLN.getText().isEmpty())
         {
             for(Employeee employee:emplist)
             {
               EmployeeType et=employee.getEmployeeType();
               String type=et.getEmployeeType();
                   String eid=employee.getEmploymentId().toString();
                   SimpleDateFormat dateForm1=new SimpleDateFormat("dd/MMM/yyyy");
                   String hireD=dateForm1.format(employee.getHireDate());
                   Person p=employee.getPersonalId();
                   for(Person person:perlist){
                       if(person.getPersonalId().compareTo(p.getPersonalId())==0)  
                       {
                           String fn=person.getFirstName();
                           String ln=person.getLastName();
                           if(fn.equalsIgnoreCase(jTextFieldFN.getText())&&ln.equalsIgnoreCase(jTextFieldLN.getText()))
                           {
                               String email=person.getEmailAdress();
                               Gender g=person.getGenderType();
                               String gender=g.getGenderType();
                               String table[]={eid,fn,ln,email,hireD,gender};
                               jTable1.setModel(dtm);
                               String header[] = new String[] { "EID", "FName", "LName","Email",  "Hire_Date","Gender" };    
                               dtm.setColumnIdentifiers(header);
                               dtm.insertRow(0, new Object[] { table[0],table[1],table[2],table[3],table[4],table[5] });
                               jTextFieldFN.setText(null); jTextFieldLN.setText(null);
                               radio1.clearSelection();
                               break;  
                           }//name==name
                       }//end if
       }//end for loop person
                    
               
               }//end for
             
         }
         else if(jRadioButtonstaff.isSelected())
         {
           
             for(Employeee employee:emplist)
             {
               EmployeeType et=employee.getEmployeeType();
               String type=et.getEmployeeType();
               
               if(type.equals("S"))
               {
                   String eid=employee.getEmploymentId().toString();
                   SimpleDateFormat dateForm1=new SimpleDateFormat("dd/MMM/yyyy");
                   String hireD=dateForm1.format(employee.getHireDate());
                   Person p=employee.getPersonalId();
                   for(Person person:perlist){
                       if(person.getPersonalId().compareTo(p.getPersonalId())==0)  
                       {
                            String fn=person.getFirstName();
             String ln=person.getLastName();
             String email=person.getEmailAdress();
             Gender g=person.getGenderType();
             String gender=g.getGenderType();
             String table[]={eid,fn,ln,email,hireD,gender};
             jTable1.setModel(dtm);
             String header[] = new String[] { "EID", "FName", "LName","Email",  "Hire_Date","Gender" };    
             dtm.setColumnIdentifiers(header);
             dtm.insertRow(0, new Object[] { table[0],table[1],table[2],table[3],table[4],table[5] });
             radio1.clearSelection();
             break;  
                       }//end if
       }//end for loop person
                    }//if(s==s)
               
               }//end for

         }//else if(staff)
         else if(jRadioButtonGuide.isSelected())
         {
             for(Employeee employee:emplist)
             {
               EmployeeType et=employee.getEmployeeType();
               String type=et.getEmployeeType();
               
               if(type.equals("G"))
               {
                   String eid=employee.getEmploymentId().toString();
                   SimpleDateFormat dateForm1=new SimpleDateFormat("dd/MMM/yyyy");
                   String hireD=dateForm1.format(employee.getHireDate());
                   Person p=employee.getPersonalId();
                   for(Person person:perlist){
                       if(person.getPersonalId().compareTo(p.getPersonalId())==0)  
                       {
                            String fn=person.getFirstName();
             String ln=person.getLastName();
             String email=person.getEmailAdress();
             Gender g=person.getGenderType();
             String gender=g.getGenderType();
             String table[]={eid,fn,ln,email,hireD,gender};
             jTable1.setModel(dtm);
             String header[] = new String[] { "EID", "FName", "LName","Email",  "Hire_Date","Gender" };    
             dtm.setColumnIdentifiers(header);
             dtm.insertRow(0, new Object[] { table[0],table[1],table[2],table[3],table[4],table[5] });
             radio1.clearSelection();
             break;  
                       }//end if
       }//end for loop person
                    }//if(g==g)
               
               }//end for
         }//else if guide
         else if(jComboBox1.getSelectedItem().equals("Arabic"))
         {
             for(Employeee employee:emplist)
             {
                 String lang="";
                 String eid=employee.getEmploymentId().toString();
          OracleDataSource ods;
               try {
            ods = new OracleDataSource(); ods.setURL("jdbc:oracle:thin:@localhost:1521:xe");
            ods.setUser("c##Travel"); ods.setPassword("987654");
            Connection con=ods.getConnection();
            Statement stmt=con.createStatement();
            String strsql="select * from GUIDE_LANGUAGES"; 
            ResultSet rs1=stmt.executeQuery(strsql);
            while(rs1.next())
            {
                
                int e=Integer.parseInt(eid);
             if(e==rs1.getInt(1)&&rs1.getString(2).equalsIgnoreCase("Arabic"))  
             {
                 Person p=employee.getPersonalId();
                 SimpleDateFormat dateForm1=new SimpleDateFormat("dd/MMM/yyyy");
                   String hireD=dateForm1.format(employee.getHireDate());
                   for(Person person:perlist){
                       if(person.getPersonalId().compareTo(p.getPersonalId())==0)  
                       {
                            String fn=person.getFirstName();
             String ln=person.getLastName();
             String email=person.getEmailAdress();
             Gender g=person.getGenderType();
             String gender=g.getGenderType();
             String table[]={eid,fn,ln,email,hireD,gender};
             jTable1.setModel(dtm);
             String header[] = new String[] { "EID", "FName", "LName","Email",  "Hire_Date","Gender" };    
             dtm.setColumnIdentifiers(header);
             dtm.insertRow(0, new Object[] { table[0],table[1],table[2],table[3],table[4],table[5] });
             radio1.clearSelection();
             break;  
                       }//end if
       }//end for loop person
                
             }//end if
            }//end while lang
            con.close();
            rs1.close();
        }catch (SQLException ex) {
            Logger.getLogger(Admin_Register.class.getName()).log(Level.SEVERE, null, ex);
        }
         }//end for
 
         }//else if(arabic)
         
           else if(jComboBox1.getSelectedItem().equals("Chinese"))
         {
             for(Employeee employee:emplist)
             {
                 String lang="";
                 String eid=employee.getEmploymentId().toString();
          OracleDataSource ods;
               try {
            ods = new OracleDataSource(); ods.setURL("jdbc:oracle:thin:@localhost:1521:xe");
            ods.setUser("c##Travel"); ods.setPassword("987654");
            Connection con=ods.getConnection();
            Statement stmt=con.createStatement();
            String strsql="select * from GUIDE_LANGUAGES"; 
            ResultSet rs1=stmt.executeQuery(strsql);
            while(rs1.next())
            {
                
                int e=Integer.parseInt(eid);
             if(e==rs1.getInt(1)&&rs1.getString(2).equalsIgnoreCase("Chinese"))  
             {
                 Person p=employee.getPersonalId();
                 SimpleDateFormat dateForm1=new SimpleDateFormat("dd/MMM/yyyy");
                   String hireD=dateForm1.format(employee.getHireDate());
                   for(Person person:perlist){
                       if(person.getPersonalId().compareTo(p.getPersonalId())==0)  
                       {
                            String fn=person.getFirstName();
             String ln=person.getLastName();
             String email=person.getEmailAdress();
             Gender g=person.getGenderType();
             String gender=g.getGenderType();
             String table[]={eid,fn,ln,email,hireD,gender};
             jTable1.setModel(dtm);
             String header[] = new String[] { "EID", "FName", "LName","Email",  "Hire_Date","Gender" };    
             dtm.setColumnIdentifiers(header);
             dtm.insertRow(0, new Object[] { table[0],table[1],table[2],table[3],table[4],table[5] });
             radio1.clearSelection();
             break;  
                       }//end if
       }//end for loop person
                
             }//end if
            }//end while lang
            con.close();
            rs1.close();
        }catch (SQLException ex) {
            Logger.getLogger(Admin_Register.class.getName()).log(Level.SEVERE, null, ex);
        }
         }//end for
 
         }//else if(Chinese)
         
           else if(jComboBox1.getSelectedItem().equals("English"))
         {
             for(Employeee employee:emplist)
             {
                 String lang="";
                 String eid=employee.getEmploymentId().toString();
          OracleDataSource ods;
               try {
            ods = new OracleDataSource(); ods.setURL("jdbc:oracle:thin:@localhost:1521:xe");
            ods.setUser("c##Travel"); ods.setPassword("987654");
            Connection con=ods.getConnection();
            Statement stmt=con.createStatement();
            String strsql="select * from GUIDE_LANGUAGES"; 
            ResultSet rs1=stmt.executeQuery(strsql);
            while(rs1.next())
            {
                
                int e=Integer.parseInt(eid);
             if(e==rs1.getInt(1)&&rs1.getString(2).equalsIgnoreCase("English"))  
             {
                 Person p=employee.getPersonalId();
                 SimpleDateFormat dateForm1=new SimpleDateFormat("dd/MMM/yyyy");
                   String hireD=dateForm1.format(employee.getHireDate());
                   for(Person person:perlist){
                       if(person.getPersonalId().compareTo(p.getPersonalId())==0)  
                       {
                            String fn=person.getFirstName();
             String ln=person.getLastName();
             String email=person.getEmailAdress();
             Gender g=person.getGenderType();
             String gender=g.getGenderType();
             String table[]={eid,fn,ln,email,hireD,gender};
             jTable1.setModel(dtm);
             String header[] = new String[] { "EID", "FName", "LName","Email",  "Hire_Date","Gender" };    
             dtm.setColumnIdentifiers(header);
             dtm.insertRow(0, new Object[] { table[0],table[1],table[2],table[3],table[4],table[5] });
             radio1.clearSelection();
             break;  
                       }//end if
       }//end for loop person
                
             }//end if
            }//end while lang
            con.close();
            rs1.close();
        }catch (SQLException ex) {
            Logger.getLogger(Admin_Register.class.getName()).log(Level.SEVERE, null, ex);
        }
         }//end for
 
         }//else if(english)
         
           else if(jComboBox1.getSelectedItem().equals("French"))
         {
             for(Employeee employee:emplist)
             {
                 String lang="";
                 String eid=employee.getEmploymentId().toString();
          OracleDataSource ods;
               try {
            ods = new OracleDataSource(); ods.setURL("jdbc:oracle:thin:@localhost:1521:xe");
            ods.setUser("c##Travel"); ods.setPassword("987654");
            Connection con=ods.getConnection();
            Statement stmt=con.createStatement();
            String strsql="select * from GUIDE_LANGUAGES"; 
            ResultSet rs1=stmt.executeQuery(strsql);
            while(rs1.next())
            {
                
                int e=Integer.parseInt(eid);
             if(e==rs1.getInt(1)&&rs1.getString(2).equalsIgnoreCase("French"))  
             {
                 Person p=employee.getPersonalId();
                 SimpleDateFormat dateForm1=new SimpleDateFormat("dd/MMM/yyyy");
                   String hireD=dateForm1.format(employee.getHireDate());
                   for(Person person:perlist){
                       if(person.getPersonalId().compareTo(p.getPersonalId())==0)  
                       {
                            String fn=person.getFirstName();
             String ln=person.getLastName();
             String email=person.getEmailAdress();
             Gender g=person.getGenderType();
             String gender=g.getGenderType();
             String table[]={eid,fn,ln,email,hireD,gender};
             jTable1.setModel(dtm);
             String header[] = new String[] { "EID", "FName", "LName","Email",  "Hire_Date","Gender" };    
             dtm.setColumnIdentifiers(header);
             dtm.insertRow(0, new Object[] { table[0],table[1],table[2],table[3],table[4],table[5] });
             radio1.clearSelection();
             break;  
                       }//end if
       }//end for loop person
                
             }//end if
            }//end while lang
            con.close();
            rs1.close();
        }catch (SQLException ex) {
            Logger.getLogger(Admin_Register.class.getName()).log(Level.SEVERE, null, ex);
        }
         }//end for
 
         }//else if(Frensh)
           else if(jComboBox1.getSelectedItem().equals("Spanish"))
         {
             for(Employeee employee:emplist)
             {
                 String lang="";
                 String eid=employee.getEmploymentId().toString();
          OracleDataSource ods;
               try {
            ods = new OracleDataSource(); ods.setURL("jdbc:oracle:thin:@localhost:1521:xe");
            ods.setUser("c##Travel"); ods.setPassword("987654");
            Connection con=ods.getConnection();
            Statement stmt=con.createStatement();
            String strsql="select * from GUIDE_LANGUAGES"; 
            ResultSet rs1=stmt.executeQuery(strsql);
            while(rs1.next())
            {
                
                int e=Integer.parseInt(eid);
             if(e==rs1.getInt(1)&&rs1.getString(2).equalsIgnoreCase("Spanish"))  
             {
                 Person p=employee.getPersonalId();
                 SimpleDateFormat dateForm1=new SimpleDateFormat("dd/MMM/yyyy");
                   String hireD=dateForm1.format(employee.getHireDate());
                   for(Person person:perlist){
                       if(person.getPersonalId().compareTo(p.getPersonalId())==0)  
                       {
                            String fn=person.getFirstName();
             String ln=person.getLastName();
             String email=person.getEmailAdress();
             Gender g=person.getGenderType();
             String gender=g.getGenderType();
             String table[]={eid,fn,ln,email,hireD,gender};
             jTable1.setModel(dtm);
             String header[] = new String[] { "EID", "FName", "LName","Email",  "Hire_Date","Gender" };    
             dtm.setColumnIdentifiers(header);
             dtm.insertRow(0, new Object[] { table[0],table[1],table[2],table[3],table[4],table[5] });
             radio1.clearSelection();
             break;  
                       }//end if
       }//end for loop person
                
             }//end if
            }//end while lang
            con.close();
            rs1.close();
        }catch (SQLException ex) {
            Logger.getLogger(Admin_Register.class.getName()).log(Level.SEVERE, null, ex);
        }
         }//end for
 
         }//else if(spanish)
           else if(jComboBox1.getSelectedItem().equals("Turkish"))
         {
             for(Employeee employee:emplist)
             {
                 String lang="";
                 String eid=employee.getEmploymentId().toString();
          OracleDataSource ods;
               try {
            ods = new OracleDataSource(); ods.setURL("jdbc:oracle:thin:@localhost:1521:xe");
            ods.setUser("c##Travel"); ods.setPassword("987654");
            Connection con=ods.getConnection();
            Statement stmt=con.createStatement();
            String strsql="select * from GUIDE_LANGUAGES"; 
            ResultSet rs1=stmt.executeQuery(strsql);
            while(rs1.next())
            {
                
                int e=Integer.parseInt(eid);
             if(e==rs1.getInt(1)&&rs1.getString(2).equalsIgnoreCase("Turkish"))  
             {
                 Person p=employee.getPersonalId();
                 SimpleDateFormat dateForm1=new SimpleDateFormat("dd/MMM/yyyy");
                   String hireD=dateForm1.format(employee.getHireDate());
                   for(Person person:perlist){
                       if(person.getPersonalId().compareTo(p.getPersonalId())==0)  
                       {String fn=person.getFirstName();
             String ln=person.getLastName();
             String email=person.getEmailAdress();
             Gender g=person.getGenderType();
             String gender=g.getGenderType();
             String table[]={eid,fn,ln,email,hireD,gender};
             jTable1.setModel(dtm);
             String header[] = new String[] { "EID", "FName", "LName","Email",  "Hire_Date","Gender" };    
             dtm.setColumnIdentifiers(header);
             dtm.insertRow(0, new Object[] { table[0],table[1],table[2],table[3],table[4],table[5] });
             radio1.clearSelection();
             break;  
                       }//end if
       }//end for loop person
                
             }//end if
            }//end while lang
            con.close();
            rs1.close();
        }catch (SQLException ex) {
            Logger.getLogger(Admin_Register.class.getName()).log(Level.SEVERE, null, ex);
        }
         }//end for
 
         }//else if(Turkish)
             
         }catch(Exception e)
         {
             JOptionPane.showMessageDialog(this, "Something Went Wrong!", "Warning", JOptionPane.WARNING_MESSAGE);
         }
        
    }//GEN-LAST:event_jButtondetailsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchEmployee().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonback;
    private javax.swing.JButton jButtondetails;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButtonGuide;
    private javax.swing.JRadioButton jRadioButtonstaff;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldFN;
    private javax.swing.JTextField jTextFieldLN;
    // End of variables declaration//GEN-END:variables
static public class HeaderColor extends DefaultTableCellRenderer{
    public HeaderColor(){
        setOpaque(true);
    }
    public Component getTableCellRendererComponent(JTable mytable, Object value,boolean selected,boolean focused,int row, int column )
    {
        Color c=new Color(77,173,180);
          super.getTableCellRendererComponent(mytable, value, selected, focused, row, column);
          setBackground(c);
          setForeground(Color.WHITE);
          return this;
}

}//end of inner class

}
